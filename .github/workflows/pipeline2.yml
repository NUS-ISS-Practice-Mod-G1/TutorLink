name: DAST Scan

on:
  workflow_dispatch: # manual trigger
  workflow_run:
    workflows: ["Deploy Pipeline"]
    types:
      - completed

jobs:
  dast:
    name: DAST Scan - OWASP ZAP
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug secret
        run: |
          if [ -z "${{ secrets.STAGING_URL }}" ]; then
            echo "STAGING_URL is empty"
            exit 1
          else
            echo "STAGING_URL is set"
          fi
          
      - name: Test connectivity
        run: curl -I ${{ secrets.STAGING_URL }}

      - name: Run OWASP ZAP baseline scan
        run: |
          docker run --user root --rm \
            -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t "${{ secrets.STAGING_URL }}" \
            -r zap-report.html \
            -d || true

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-html-report
          path: zap-report.html
          
  ai-implementation:
    name: AI Implementation
    runs-on: ubuntu-latest
    needs: dast
    permissions:
      contents: read
    steps:
      - name: Download ZAP report artifacts
        uses: actions/download-artifact@v4
        with:
          name: zap-html-report
          path: ./reports

      - name: Analyze ZAP Report with Gemini
        run: |
          python -m pip install --upgrade pip
          pip install google-genai html2text

          export GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"
          REPORT_FILE="./reports/zap-report.html"

          if [ ! -f "$REPORT_FILE" ]; then
            echo "ZAP report not found!"
            exit 1
          fi

          REPORT_TEXT=$(python - <<END
          import html2text
          with open("$REPORT_FILE", "r", encoding="utf-8") as f:
              html = f.read()
          text = html2text.html2text(html)
          print(text)
          END
          )
          
                    SUMMARY=$(python - <<END
          import os, google.genai
          client = google.genai.Client()
          response = client.models.generate_content(
              model="gemini-2.5-flash",
              contents=f"Summarize the following ZAP scan report and highlight key warnings and potential risks:\n\n{REPORT_TEXT}",
          )
          print(response.text)
          END
          )
          
                    echo "===== Gemini-Infused ZAP Analysis ====="
                    echo "$SUMMARY"
