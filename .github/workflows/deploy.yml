name: Build and Deploy Docker Images to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development

    steps:
    # 1. Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Build Docker images
    - name: Build backend image
      run: docker build -t backend:latest ./backend

    - name: Build frontend image
      run: docker build -t frontend:latest ./frontend

    # 3. Save images as tar files
    - name: Save Docker images
      run: |
        mkdir -p docker-images
        docker save backend:latest -o docker-images/backend.tar
        docker save frontend:latest -o docker-images/frontend.tar
        chmod 644 docker-images/*.tar   # make them readable by scp-action
        ls -l docker-images/

    # 4. Copy images to EC2
    - name: Copy Docker images to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          docker-images/*.tar
          docker-compose.yml
        target: /home/ubuntu/app


    # 5. SSH to EC2 and deploy
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          mkdir -p ~/app/docker-images
          mv ~/app/*.tar ~/app/docker-images/
          cd ~/app/docker-images
          docker load -i backend.tar
          docker load -i frontend.tar
          cd ~/app
          docker compose down
          docker compose up -d
