name: CI/CD Pipeline
# unit tests > SAST > Owasp dependency check (SCA) > build > DAST
on:
    pull_request:
        branches: [ main ]
    workflow_dispatch: # manual trigger allowed

jobs:
        # run frontend test
    frontend-test:
        name: Frontend - Test
        runs-on: ubuntu-latest
        # needs: frontend-build
        defaults:
            run:
                working-directory: ./frontend/
        steps:
            - name: Checkout Frontend
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20
                
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                path: frontend/node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-
                    
            - name: Install dependencies (if cache missed)
              run: npm ci
                    
            # - name: Run Tests
            #   run: npm test
            
    # run backend test
    backend-test:
        name: Backend - Test
        runs-on: ubuntu-latest
        # needs: backend-build
        environment: development
        defaults:
            run:
                working-directory: ./backend/
        steps:
            - name: Checkout Backend
              uses: actions/checkout@v4
            
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: 17
                cache: 'maven'

            - name: Write application.yml
              run: |
                  mkdir -p src/main/resources
                  printf "%s\n" "${{ secrets.BACKEND_APP_YML }}" > src/main/resources/application.yml
            
            - name: Run Tests
              run: mvn clean test
            
            - name: Generate Coverage
              run: mvn jacoco:report
            
            - uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                files: backend/target/site/jacoco/jacoco.xml
                fail_ci_if_error: true
                verbose: true

    sast:
        name: SAST - CodeQL Scan
        needs: [frontend-test, backend-test]
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            actions: read
            contents: read
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Initialize CodeQL
            uses: github/codeql-action/init@v3
            with:
              languages: javascript, java
              queries: security-extended,security-and-quality
          - name: Install frontend dependencies
            run: |
                cd frontend
                npm ci
        
          - name: Build frontend
            run: |
                cd frontend
                npm run build --if-present    
          - name: Build backend
            run: |
                cd backend
                mvn compile -DskipTests
          - name: Perform CodeQL Analysis
            uses: github/codeql-action/analyze@v3
          
    # ----------------- SECURITY SCAN -----------------
    asp-scan-frontend:
        name: OWASP Scan - Frontend
        runs-on: ubuntu-latest
        needs: frontend-test
        steps:
            - uses: actions/checkout@v4
            
            - name: Run OWASP Dependency Check (Frontend)
              uses: dependency-check/Dependency-Check_Action@main
              with:
                project: 'frontend'
                path: './frontend'
                format: 'HTML'
                out: 'reports/frontend'
                
            - name: Upload OWASP Report (Frontend)
              uses: actions/upload-artifact@v4
              with:
                name: dependency-check-report-frontend
                path: reports/frontend
            
    asp-scan-backend:
        name: OWASP Scan - Backend
        runs-on: ubuntu-latest
        needs: backend-test
        steps:
            - uses: actions/checkout@v4
            
            - name: Run OWASP Dependency Check (Backend)
              uses: dependency-check/Dependency-Check_Action@main
              with:
                project: 'backend'
                path: './backend'
                format: 'HTML'
                out: 'reports/backend'
                
            - name: Upload OWASP Report (Backend)
              uses: actions/upload-artifact@v4
              with:
                name: dependency-check-report-backend
                path: reports/backend      
    # ----------------- FRONTEND -----------------
    frontend-build:
        name: Frontend - Build
        needs: [sast, asp-scan-frontend]
        runs-on: ubuntu-latest
        environment: development
        defaults:
            run:
                working-directory: ./frontend/
        steps:
            - name: Checkout Frontend
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Cache node modules
              uses: actions/cache@v3
              with:
                path: frontend/node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Create .env file
              run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env

            - name: Build project
              run: npm run build



    # ----------------- BACKEND -----------------
    backend-build:
        name: Backend - Build
        needs: [sast, asp-scan-backend]
        runs-on: ubuntu-latest
        environment: development
        defaults:
            run:
                working-directory: ./backend/
        steps:
            - name: Checkout Backend
              uses: actions/checkout@v4
            
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: 17
                cache: 'maven'   # <--- enables ~/.m2/repository caching
            
            - name: Create application.yml
              run: |
                mkdir -p src/main/resources
                echo "${{ secrets.BACKEND_APP_YML }}" > src/main/resources/application.yml
            
            - name: Build Backend (skip tests)
              run: mvn -B clean package -DskipTests

    
            
    
